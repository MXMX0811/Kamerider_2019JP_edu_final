<!--open运行-->
<launch>

  <!-- Turtlebot -->
  <arg name="base"              default="$(env TURTLEBOT_BASE)"         doc="mobile base type [create, roomba]"/>
  <arg name="battery"           default="$(env TURTLEBOT_BATTERY)"      doc="kernel provided locatio for battery info, use /proc/acpi/battery/BAT0 in 2.6 or earlier kernels." />
  <arg name="stacks"            default="$(env TURTLEBOT_STACKS)"       doc="stack type displayed in visualisation/simulation [circles, hexagons]"/>
  <arg name="3d_sensor"         default="$(env TURTLEBOT_3D_SENSOR)"    doc="3d sensor types [kinect, asux_xtion_pro]"/>
  <arg name="simulation"        default="$(env TURTLEBOT_SIMULATION)"   doc="set flags to indicate this turtle is run in simulation mode."/>
  <arg name="serialport"        default="$(env TURTLEBOT_SERIAL_PORT)"  doc="used by create to configure the port it is connected on [/dev/ttyUSB0, /dev/ttyS0]"/>

  <param name="/use_sim_time" value="false"/>

  <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>
  <include file="$(find turtlebot_bringup)/launch/includes/mobile_base.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="serialport" value="$(arg serialport)" />
  </include>
  <include unless="$(eval arg('battery') == 'None')" file="$(find turtlebot_bringup)/launch/includes/netbook.launch.xml">
    <arg name="battery" value="$(arg battery)" />
  </include>
	<!-- 启动kinect并设置参数 -->
	  <include file="$(find turtlebot_bringup)launch/3dsensor.launch">
	    <arg name="rgb_processing" value="true" />
	    <arg name="depth_processing"     value="true"/>
	    <arg name="depth_registration" value="false" />
	    <arg name="depth_registered_processing"     value="false"/>
	    <arg name="scan_topic" value="/scan" />
	    <arg name="camera" value="camera" />
	  </include>

	<!-- 启动astra -->
	<include file="$(find astra_launch)/launch/astra.launch">
	<arg name="camera" value="camera1" />
	</include> 

	<!-- 启动primesense -->
	<!-- <include file="$(find openni2_launch)/launch/openni2.launch">
		<arg name="camera" value="camera1" />
	</include> -->
	
	<!-- 启动搜索节点 -->

	<node pkg="open_task" type="search_object.py" name="ObjectSearch" output="screen" launch-prefix="xterm -e"/>

	<node pkg="open_task" type="kamerider_client.py" name="kamerider_client" output="screen" launch-prefix="xterm -e"/>

	<include file="$(find open_task)/launch/navigation_demo.launch"/>


</launch>
